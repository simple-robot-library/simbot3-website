"use strict";(self.webpackChunksimbot_website=self.webpackChunksimbot_website||[]).push([[8389],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>g});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),u=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=u(e.components);return r.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=u(t),g=a,m=d["".concat(s,".").concat(g)]||d[g]||p[g]||o;return t?r.createElement(m,l(l({ref:n},c),{},{components:t})):r.createElement(m,l({ref:n},c))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=d;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var u=2;u<o;u++)l[u]=t[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},5162:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(7294),a=t(6010);const o="tabItem_Ymn6";function l(e){let{children:n,hidden:t,className:l}=e;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(o,l),hidden:t},n)}},5488:(e,n,t)=>{t.d(n,{Z:()=>g});var r=t(7462),a=t(7294),o=t(6010),l=t(2389),i=t(7392),s=t(7094),u=t(2466);const c="tabList__CuJ",p="tabItem_LNqP";function d(e){var n,t;const{lazy:l,block:d,defaultValue:g,values:m,groupId:v,className:f}=e,b=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),y=null!=m?m:b.map((e=>{let{props:{value:n,label:t,attributes:r}}=e;return{value:n,label:t,attributes:r}})),h=(0,i.l)(y,((e,n)=>e.value===n.value));if(h.length>0)throw new Error('Docusaurus error: Duplicate values "'+h.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const k=null===g?g:null!=(n=null!=g?g:null==(t=b.find((e=>e.props.default)))?void 0:t.props.value)?n:b[0].props.value;if(null!==k&&!y.some((e=>e.value===k)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+k+'" but none of its children has the corresponding value. Available values are: '+y.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:w,setTabGroupChoices:O}=(0,s.U)(),[M,x]=(0,a.useState)(k),E=[],{blockElementScrollPositionUntilNextRender:T}=(0,u.o5)();if(null!=v){const e=w[v];null!=e&&e!==M&&y.some((n=>n.value===e))&&x(e)}const C=e=>{const n=e.currentTarget,t=E.indexOf(n),r=y[t].value;r!==M&&(T(n),x(r),null!=v&&O(v,String(r)))},N=e=>{var n;let t=null;switch(e.key){case"ArrowRight":{var r;const n=E.indexOf(e.currentTarget)+1;t=null!=(r=E[n])?r:E[0];break}case"ArrowLeft":{var a;const n=E.indexOf(e.currentTarget)-1;t=null!=(a=E[n])?a:E[E.length-1];break}}null==(n=t)||n.focus()};return a.createElement("div",{className:(0,o.Z)("tabs-container",c)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":d},f)},y.map((e=>{let{value:n,label:t,attributes:l}=e;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:M===n?0:-1,"aria-selected":M===n,key:n,ref:e=>E.push(e),onKeyDown:N,onFocus:C,onClick:C},l,{className:(0,o.Z)("tabs__item",p,null==l?void 0:l.className,{"tabs__item--active":M===n})}),null!=t?t:n)}))),l?(0,a.cloneElement)(b.filter((e=>e.props.value===M))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},b.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==M})))))}function g(e){const n=(0,l.Z)();return a.createElement(d,(0,r.Z)({key:String(n)},e))}},8231:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>g,frontMatter:()=>i,metadata:()=>u,toc:()=>p});var r=t(7462),a=(t(7294),t(3905)),o=t(5488),l=t(5162);const i={sidebar_position:20,title:"core\u6982\u89c8"},s=void 0,u={unversionedId:"take-a-look/code-overview",id:"take-a-look/code-overview",title:"core\u6982\u89c8",description:"\u6838\u5fc3\u6a21\u5757\u4e0b\u6240\u652f\u6301\u7684\u66f4\u8d34\u8fd1\u539f\u751f\u7684\u4f7f\u7528\u65b9\u5f0f\u3002",source:"@site/docs/take-a-look/code-overview.md",sourceDirName:"take-a-look",slug:"/take-a-look/code-overview",permalink:"/docs/take-a-look/code-overview",draft:!1,editUrl:"https://github.com/simple-robot-library/simbot3-website/blob/main/docs/docs/take-a-look/code-overview.md",tags:[],version:"current",lastUpdatedBy:"ForteScarlet",lastUpdatedAt:1665991410,formattedLastUpdatedAt:"Oct 17, 2022",sidebarPosition:20,frontMatter:{sidebar_position:20,title:"core\u6982\u89c8"},sidebar:"docs",previous:{title:"\u76d1\u542c\u6982\u89c8",permalink:"/docs/take-a-look/listen-overview"},next:{title:"boot\u6982\u89c8",permalink:"/docs/take-a-look/boot-overview"}},c={},p=[],d={toc:p};function g(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"\u6838\u5fc3\u6a21\u5757\u4e0b\u6240\u652f\u6301\u7684\u66f4\u8d34\u8fd1\u539f\u751f\u7684\u4f7f\u7528\u65b9\u5f0f\u3002"),(0,a.kt)("admonition",{title:"\u6ce8\u610f",type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"\u4e0b\u6587\u4e2d\u6709\u5173\u4e8e\u76d1\u542c\u51fd\u6570\u6ce8\u518c\u7684\u5185\u5bb9\u5e76\u975e\u76ee\u524d\u7684\u6700\u63a8\u8350\u65b9\u5f0f\u3002")),(0,a.kt)(o.Z,{groupId:"code",mdxType:"Tabs"},(0,a.kt)(l.Z,{value:"Kotlin",label:"Kotlin",default:!0,mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},'// listener manager\nval listenerManager = coreListenerManager { /* config... */  }\n\n// bot manager\nval botManager = xxxBotManager(listenerManager) { /* config... */ }\n\n// register bot\nval bot = botManager.register(id, key, token, orAnyOther) { /* config... */ }\n\n// listen event.\nlistenerManager.listen(ChannelMessageEvent) { context, event ->\n    println(context)\n    \n    event.replyIfSupport(Text { "Hello World" } + At(event.author.id))\n    \n    val guild = event.channel().guild()\n    \n    guild.children().forEach { ch -> println("Channel ${ch.name} in guild ${guild.name}") } \n    \n    // result value.\n    null\n}\n\nbot.start()\nbot.join()\n\n'))),(0,a.kt)(l.Z,{value:"Java",label:"Java",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'// listener manager\nfinal CoreListenerManagerConfiguration listenerManagerConfiguration = new CoreListenerManagerConfiguration();\nfinal CoreListenerManager listenerManager = CoreListenerManager.newInstance(listenerManagerConfiguration);\n\nfinal BotManager<?> botManager = xxxBotManager(listenerManager, (config) -> { /* ... */ });\n\nfinal Bot register = botManager.register(id, key, token, orAnyOther, (config) -> { /* ... */ });\n\n\nfinal EventListener listener = CoreListenerUtil.newCoreListener(\n        ChannelMessageEvent.Key,\n        (context, event) -> {\n            System.out.println(context);\n\n            if (event instanceof MessageReplySupport) {\n                final Messages messages = Messages.getMessages(\n                        Text.getText("Hello World"),\n                        new At(event.getAuthor().getId())\n                );\n\n                ((MessageReplySupport) event).replyBlocking(messages);\n            }\n\n            final Guild guild = event.getChannel().getGuild();\n\n            guild.getChildren(null, Limiter.ZERO)\n                    .forEach(ch -> System.out.println("Channel " + ch.getName() + "in guild " + guild.getName()));\n\n\n            return null;\n        }\n);\n\n// register listener\nlistenerManager.register(listener);\n\n\nregister.startBlocking();\nregister.joinBlocking();\n')))))}g.isMDXComponent=!0}}]);